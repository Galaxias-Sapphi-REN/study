<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>per.study</groupId>
    <artifactId>study</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>Module1JRE08</module>
        <module>Module2JRE11</module>
        <module>basic</module>
        <module>middlewares</module>
        <module>dependencies</module>
    </modules>

    <repositories>
        <repository>
            <id>repo-release</id>
            <name>repo-release</name>
            <url>/Users/sapphire/Projects/repository</url>
        </repository>
    </repositories>

    <build>
        <finalName>${project.artifactId}</finalName>
        <!-- 默认源代码和资源文件目录配置 -->
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <!-- 如何拓展源代码资源文件夹 http://acooly.iteye.com/blog/1814673 -->
        <pluginManagement>
            <!-- 这里只是将插件列出，由子pom子文件决定是否引用 -->
            <plugins>
                <!-- 指定JDK的编译版本与编码 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <source>13</source>
                        <target>13</target>
                        <encoding>utf-8</encoding>
                        <showWarnings>true</showWarnings>
                    </configuration>
                </plugin>
                <!-- 打包时单元测试 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19</version>
                    <configuration>
                        <forkMode>once</forkMode>
                        <!-- 参数行命行 -->
                        <argLine>-Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m
                            -Dfile.encoding=UTF-8</argLine>
                        <parallel>methods</parallel>
                        <threadCount>10</threadCount>
                        <!-- skipTests为true发布时自动跳过单元测试 -->
                        <skipTests>true</skipTests>
                        <includes><!-- 添加测试命名规则 -->
                            <include>**/*Tests.java</include>
                            <include>**/*Test.java</include>
                        </includes>
                        <formats>
                            <format>html</format>
                        </formats>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>junit</groupId>
                            <artifactId>junit</artifactId>
                            <version>4.13.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- 设置resouce目录下的资源文件编码，否则如果配置xml文件中有中文字符，部署后可能会引起运行失败 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <source>13</source><!-- 源代码编译版版本 -->
                        <target>13</target><!-- 目标平台编译版本 -->
                        <showWarnings>true</showWarnings>
                    </configuration>
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            <!-- 在default生命周期的 validate阶段就执行resources插件的copy-resources目标 -->
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <!-- 指定resources插件处理资源文件到哪个目录下 -->
                                <outputDirectory>target/classes</outputDirectory>
                                <!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） <outputDirectory>target/classes</outputDirectory> -->
                                <!-- 待处理的资源定义 -->
                                <resources>
                                    <resource>
                                        <!-- 指定resources插件处理哪个目录下的资源文件 -->
                                        <directory>src/main/resources</directory>
                                        <excludes>
                                            <exclude>env/*.*</exclude>
                                        </excludes>
                                        <includes>
                                            <include>**/*.*</include>
                                        </includes>
                                        <!-- 指定不需要处理的资源 <excludes> <exclude>WEB-INF/*.*</exclude> </excludes> -->
                                        <!-- 是否对待处理的资源开启过滤模式 (resources插件的copy-resources目标也有资源过滤的功能，这里配置的
                                            这个功能的效果跟<build><resources><resource>下配置的资源过滤是一样的，
                                            只不过可能执行的阶段不一样， 这里执行的阶段是插件指定的validate阶段，
                                            <build><resources><resource>下的配置将是在resources插件的resources目标执行时起作用（在process-resources阶段）) -->
                                        <filtering>false</filtering>
                                    </resource>
                                    <resource>
                                        <directory>src/main/java</directory>
                                        <includes>
                                            <include>**/*.xml</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
